@page
@model My_app.Pages.Admin.DashboardModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        body {
            display: flex;
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        #sidebar {
            width: 280px;
            height: 100vh;
            background: linear-gradient(180deg, #2c3e50, #1a252f);
            color: white;
            padding: 20px 0;
            position: fixed;
            top: 0;
            left: 0;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

            #sidebar .sidebar-header {
                padding: 0 20px 20px;
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
                margin-bottom: 20px;
            }

            #sidebar .nav-link {
                color: rgba(255, 255, 255, 0.8);
                padding: 12px 20px;
                margin: 5px 0;
                border-radius: 5px;
                transition: all 0.3s;
            }

                #sidebar .nav-link:hover {
                    background-color: rgba(255, 255, 255, 0.1);
                    color: white;
                }

                #sidebar .nav-link.active {
                    background-color: rgba(255, 255, 255, 0.2);
                    color: white;
                }

                #sidebar .nav-link i {
                    margin-right: 10px;
                    font-size: 1.1rem;
                }

        #content {
            flex: 1;
            margin-left: 280px;
            background-color: #f8f9fa;
        }

        .headertotdiv {
            width: 100%;
            height: 70px;
            background: linear-gradient(90deg, #3498db, #2980b9);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 30px;
            color: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s, box-shadow 0.3s;
            margin-bottom: 20px;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            }

        .card-header {
            background-color: white;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            font-weight: 600;
            border-radius: 10px 10px 0 0 !important;
        }

        .stat-card {
            padding: 20px;
            border-radius: 10px;
            color: white;
            text-align: center;
        }

            .stat-card i {
                font-size: 2rem;
                margin-bottom: 10px;
            }

            .stat-card .value {
                font-size: 1.8rem;
                font-weight: 700;
            }

            .stat-card .label {
                font-size: 0.9rem;
                opacity: 0.9;
            }

        .table-responsive {
            border-radius: 10px;
            overflow: hidden;
        }

        .table {
            margin-bottom: 0;
        }

            .table thead th {
                background-color: #f8f9fa;
                border-bottom: 1px solid #e9ecef;
                font-weight: 600;
            }

        tr {
            cursor: pointer;
            transition: background-color 0.2s;
        }

            tr:hover {
                background-color: rgba(52, 152, 219, 0.05);
            }

        .container {
            padding: 20px;
        }
    </style>
</head>
<body>

    <!-- Sidebar Dashboard -->
    <div id="sidebar">
        <div class="sidebar-header">
            <h3><i class="bi bi-graph-up"></i> FinancePro</h3>
        </div>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a href="#" class="nav-link active">
                    <i class="bi bi-speedometer2"></i> Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a href="#" class="nav-link">
                    <i class="bi bi-credit-card"></i> Payments
                </a>
            </li>
            <li class="nav-item">
                <a href="#" class="nav-link">
                    <i class="bi bi-arrow-left-right"></i> Transfers
                </a>
            </li>
            <li class="nav-item">
                <a href="#" class="nav-link">
                    <i class="bi bi-pie-chart"></i> Analytics
                </a>
            </li>
            <li class="nav-item">
                <a href="#" class="nav-link">
                    <i class="bi bi-people"></i> Customers
                </a>
            </li>
            <li class="nav-item">
                <a href="#" class="nav-link">
                    <i class="bi bi-file-earmark-text"></i> Invoices
                </a>
            </li>
            <li class="nav-item mt-4">
                <a href="#" class="nav-link">
                    <i class="bi bi-gear"></i> Settings
                </a>
            </li>
            <li class="nav-item">
                <a href="#" class="nav-link">
                    <i class="bi bi-question-circle"></i> Help & Support
                </a>
            </li>
        </ul>
    </div>

    <div id="content">
        <!-- Header -->
        <header class="headertotdiv">
            <div class="headersubdiv">
                <h5 class="mb-0">Transaction Dashboard</h5>
            </div>
            <div class="d-flex align-items-center">
                <i class="bi bi-bell-fill me-3" style="font-size: 1.2rem;"></i>
                <i class="bi bi-person-circle" style="font-size: 1.8rem;"></i>
                <span class="ms-2">Admin</span>
            </div>
        </header>

        <div class="container mt-4">
            <!-- Stats Cards Row -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="stat-card" style="background: linear-gradient(135deg, #3498db, #2980b9);">
                        <i class="bi bi-currency-dollar"></i>
                        <div class="value" id="totalAmount">$3,000.00</div>
                        <div class="label">Total Transactions</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card" style="background: linear-gradient(135deg, #2ecc71, #27ae60);">
                        <i class="bi bi-check-circle"></i>
                        <div class="value" id="successAmount">$1,500.00</div>
                        <div class="label">Successful</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card" style="background: linear-gradient(135deg, #f39c12, #e67e22);">
                        <i class="bi bi-clock-history"></i>
                        <div class="value" id="pendingAmount">$1,100.00</div>
                        <div class="label">Pending</div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="stat-card" style="background: linear-gradient(135deg, #e74c3c, #c0392b);">
                        <i class="bi bi-x-circle"></i>
                        <div class="value" id="failedAmount">$400.00</div>
                        <div class="label">Failed</div>
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Transaction Table Card -->
                <div class="col-md-12 mb-4">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h4 class="mb-0">Recent Transactions</h4>
                            <button class="btn btn-sm btn-primary">
                                <i class="bi bi-plus"></i> Add New
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>S.No</th>
                                            <th>Transaction ID</th>
                                            <th>Date</th>
                                            <th>Status</th>
                                            <th>Amount</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="transactionTable"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Graph Cards -->
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h4>Users by Status</h4>
                        </div>
                        <div class="card-body">
                            <canvas id="statusChart" height="250"></canvas>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h4>Monthly Users Volume</h4>
                        </div>
                        <div class="card-body">
                            <canvas id="monthlyChart" height="250"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Transaction Details Modal -->
    <div class="modal fade" id="transactionModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Transaction Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modalBody">
                    <!-- Transaction details will be populated dynamically -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Export as PDF</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", async function () {
            try {
                // Fetch user data from `userdata.json`
                const response = await fetch("/usersdata.json");
                const users = await response.json();
                console.log(users);
                // Update table (grid) with user details
                const tableBody = document.getElementById("transactionTable");
                tableBody.innerHTML = ""; // Clear existing content
                users.forEach((user, index) => {
                    const row = `<tr>
                        <td>${index + 1}</td>
                        <td><strong>${user.Name}</strong></td>
                        <td>${user.Email}</td>
                        <td>${user.Gender}</td>
                        <td>${user.CreatedDate}</td>
                    </tr>`;
                    tableBody.innerHTML += row;
                });

                // Count users per registration date for the chart
                const userCountByDate = {};
                users.forEach(user => {
                    const date = user.CreatedDate.split(" ")[0]; // Extract date portion
                    userCountByDate[date] = (userCountByDate[date] || 0) + 1;
                });

                // Generate a bar chart for user registrations by date
                new Chart(document.getElementById("statusChart"), {
                    type: "bar",
                    data: {
                        labels: Object.keys(userCountByDate), // Dates
                        datasets: [{
                            label: "User Registrations",
                            data: Object.values(userCountByDate), // User count per date
                            backgroundColor: "#3498db",
                            borderRadius: 5
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { display: false },
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        return `Users: ${context.raw}`;
                                    }
                                }
                            }
                        },
                        scales: {
                            y: { beginAtZero: true }
                        }
                    }
                });
                // Count users per month-year (MM-YY)
                const userCountByMonth = {};
                users.forEach(user => {
                    const monthYear = user.CreatedDate.slice(6, 8); // Extract MM-YY format
                    userCountByMonth[monthYear] = (userCountByMonth[monthYear] || 0) + 1;
                });

                // Generate Monthly User Registration Chart
                new Chart(document.getElementById("monthlyChart"), {
                    type: "line",
                    data: {
                        labels: Object.keys(userCountByMonth), // Month-Year labels
                        datasets: [{
                            label: "User Registrations",
                            data: Object.values(userCountByMonth), // User count per month
                            backgroundColor: "rgba(52, 152, 219, 0.2)",
                            borderColor: "#3498db",
                            borderWidth: 2,
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { display: false },
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        return `Users: ${context.raw}`;
                                    }
                                }
                            }
                        },
                        scales: {
                            y: { beginAtZero: true }
                        }
                    }
                });

            } catch (error) {
                console.error("Error fetching user data:", error);
            }

           
        });

    </script>
</body>
</html>